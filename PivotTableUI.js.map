{"version":3,"sources":["src/PivotTableUI.jsx"],"names":["DraggableAttribute","props","state","open","filterText","value","valueFilter","removeValuesFromFilter","name","addValuesToFilter","x","toLowerCase","trim","includes","e","stopPropagation","setValuesInFilter","Object","keys","attrValues","filter","y","showMenu","length","menuLimit","values","shown","matchesFilter","bind","sort","sorter","display","cursor","zIndex","moveFilterBoxToTop","setState","target","map","toggleValue","selectOnly","filtered","toggleFilterBox","getFilterBox","React","Component","defaultProps","propTypes","PropTypes","string","isRequired","func","objectOf","number","bool","Dropdown","toggle","current","r","setValue","PureComponent","PivotTableUI","unusedOrder","zIndices","maxZIndex","openDropdown","materializedInput","materializeInput","data","nextData","newState","recordsProcessed","PivotData","forEachRecord","derivedAttributes","record","push","attr","null","command","onChange","key","sendPropUpdate","$set","attribute","reduce","v","$unset","dropdown","items","classes","group","ghostClass","preventOnFilter","sorters","numValsAllowed","aggregators","aggregatorName","numInputs","aggregatorCellOutlet","outlet","rendererName","renderers","rendererCell","isOpen","propUpdater","sortIcons","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","aggregatorCell","rowOrder","colOrder","Array","fill","n","i","vals","hiddenAttributes","hiddenFromAggregators","$splice","unusedAttrs","rows","cols","hiddenFromDragDrop","unusedLength","horizUnused","unusedOrientationCutoff","unusedAttrsCell","makeDnDCell","order","colAttrs","colAttrsCell","rowAttrs","rowAttrsCell","outputCell","assign","PivotTable","arrayOf"],"mappings":"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","file":"PivotTableUI.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport update from 'immutability-helper';\r\nimport {PivotData, sortAs, getSort} from './Utilities';\r\nimport PivotTable from './PivotTable';\r\nimport Sortable from 'react-sortablejs';\r\nimport Draggable from 'react-draggable';\r\n\r\n/* eslint-disable react/prop-types */\r\n// eslint can't see inherited propTypes!\r\n\r\nexport class DraggableAttribute extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {open: false, filterText: ''};\r\n  }\r\n\r\n  toggleValue(value) {\r\n    if (value in this.props.valueFilter) {\r\n      this.props.removeValuesFromFilter(this.props.name, [value]);\r\n    } else {\r\n      this.props.addValuesToFilter(this.props.name, [value]);\r\n    }\r\n  }\r\n\r\n  matchesFilter(x) {\r\n    return x\r\n      .toLowerCase()\r\n      .trim()\r\n      .includes(this.state.filterText.toLowerCase().trim());\r\n  }\r\n\r\n  selectOnly(e, value) {\r\n    e.stopPropagation();\r\n    this.props.setValuesInFilter(\r\n      this.props.name,\r\n      Object.keys(this.props.attrValues).filter(y => y !== value)\r\n    );\r\n  }\r\n\r\n  getFilterBox() {\r\n    const showMenu =\r\n      Object.keys(this.props.attrValues).length < this.props.menuLimit;\r\n\r\n    const values = Object.keys(this.props.attrValues);\r\n    const shown = values\r\n      .filter(this.matchesFilter.bind(this))\r\n      .sort(this.props.sorter);\r\n\r\n    return (\r\n      <Draggable handle=\".pvtDragHandle\">\r\n        <div\r\n          className=\"pvtFilterBox\"\r\n          style={{\r\n            display: 'block',\r\n            cursor: 'initial',\r\n            zIndex: this.props.zIndex,\r\n          }}\r\n          onClick={() => this.props.moveFilterBoxToTop(this.props.name)}\r\n        >\r\n          <a onClick={() => this.setState({open: false})} className=\"pvtCloseX\">\r\n            ×\r\n          </a>\r\n          <span className=\"pvtDragHandle\">☰</span>\r\n          <h4>{this.props.name}</h4>\r\n\r\n          {showMenu || <p>(too many values to show)</p>}\r\n\r\n          {showMenu && (\r\n            <p>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Filter values\"\r\n                className=\"pvtSearch\"\r\n                value={this.state.filterText}\r\n                onChange={e =>\r\n                  this.setState({\r\n                    filterText: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n              <br />\r\n              <a\r\n                role=\"button\"\r\n                className=\"pvtButton\"\r\n                onClick={() =>\r\n                  this.props.removeValuesFromFilter(\r\n                    this.props.name,\r\n                    Object.keys(this.props.attrValues).filter(\r\n                      this.matchesFilter.bind(this)\r\n                    )\r\n                  )\r\n                }\r\n              >\r\n                Select {values.length === shown.length ? 'All' : shown.length}\r\n              </a>{' '}\r\n              <a\r\n                role=\"button\"\r\n                className=\"pvtButton\"\r\n                onClick={() =>\r\n                  this.props.addValuesToFilter(\r\n                    this.props.name,\r\n                    Object.keys(this.props.attrValues).filter(\r\n                      this.matchesFilter.bind(this)\r\n                    )\r\n                  )\r\n                }\r\n              >\r\n                Deselect {values.length === shown.length ? 'All' : shown.length}\r\n              </a>\r\n            </p>\r\n          )}\r\n\r\n          {showMenu && (\r\n            <div className=\"pvtCheckContainer\">\r\n              {shown.map(x => (\r\n                <p\r\n                  key={x}\r\n                  onClick={() => this.toggleValue(x)}\r\n                  className={x in this.props.valueFilter ? '' : 'selected'}\r\n                >\r\n                  <a className=\"pvtOnly\" onClick={e => this.selectOnly(e, x)}>\r\n                    only\r\n                  </a>\r\n                  <a className=\"pvtOnlySpacer\">&nbsp;</a>\r\n\r\n                  {x === '' ? <em>null</em> : x}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Draggable>\r\n    );\r\n  }\r\n\r\n  toggleFilterBox() {\r\n    this.setState({open: !this.state.open});\r\n    this.props.moveFilterBoxToTop(this.props.name);\r\n  }\r\n\r\n  render() {\r\n    const filtered =\r\n      Object.keys(this.props.valueFilter).length !== 0\r\n        ? 'pvtFilteredAttribute'\r\n        : '';\r\n    return (\r\n      <li data-id={this.props.name}>\r\n        <span className={'pvtAttr ' + filtered}>\r\n          {this.props.name}\r\n          <span\r\n            className=\"pvtTriangle\"\r\n            onClick={this.toggleFilterBox.bind(this)}\r\n          >\r\n            {' '}\r\n            ▾\r\n          </span>\r\n        </span>\r\n\r\n        {this.state.open ? this.getFilterBox() : null}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nDraggableAttribute.defaultProps = {\r\n  valueFilter: {},\r\n};\r\n\r\nDraggableAttribute.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  addValuesToFilter: PropTypes.func.isRequired,\r\n  removeValuesFromFilter: PropTypes.func.isRequired,\r\n  attrValues: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  valueFilter: PropTypes.objectOf(PropTypes.bool),\r\n  moveFilterBoxToTop: PropTypes.func.isRequired,\r\n  sorter: PropTypes.func.isRequired,\r\n  menuLimit: PropTypes.number,\r\n  zIndex: PropTypes.number,\r\n};\r\n\r\nexport class Dropdown extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"pvtDropdown\" style={{zIndex: this.props.zIndex}}>\r\n        <div\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            this.props.toggle();\r\n          }}\r\n          className={\r\n            'pvtDropdownValue pvtDropdownCurrent ' +\r\n            (this.props.open ? 'pvtDropdownCurrentOpen' : '')\r\n          }\r\n          role=\"button\"\r\n        >\r\n          <div className=\"pvtDropdownIcon\">{this.props.open ? '×' : '▾'}</div>\r\n          {this.props.current || <span>&nbsp;</span>}\r\n        </div>\r\n\r\n        {this.props.open && (\r\n          <div className=\"pvtDropdownMenu\">\r\n            {this.props.values.map(r => (\r\n              <div\r\n                key={r}\r\n                role=\"button\"\r\n                onClick={e => {\r\n                  e.stopPropagation();\r\n                  if (this.props.current === r) {\r\n                    this.props.toggle();\r\n                  } else {\r\n                    this.props.setValue(r);\r\n                  }\r\n                }}\r\n                className={\r\n                  'pvtDropdownValue ' +\r\n                  (r === this.props.current ? 'pvtDropdownActiveValue' : '')\r\n                }\r\n              >\r\n                {r}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PivotTableUI extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unusedOrder: [],\r\n      zIndices: {},\r\n      maxZIndex: 1000,\r\n      openDropdown: false,\r\n      attrValues: {},\r\n      materializedInput: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.materializeInput(this.props.data);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.materializeInput(this.props.data);\r\n  }\r\n\r\n  materializeInput(nextData) {\r\n    if (this.state.data === nextData) {\r\n      return;\r\n    }\r\n    const newState = {\r\n      data: nextData,\r\n      attrValues: {},\r\n      materializedInput: [],\r\n    };\r\n    let recordsProcessed = 0;\r\n    PivotData.forEachRecord(\r\n      newState.data,\r\n      this.props.derivedAttributes,\r\n      function(record) {\r\n        newState.materializedInput.push(record);\r\n        for (const attr of Object.keys(record)) {\r\n          if (!(attr in newState.attrValues)) {\r\n            newState.attrValues[attr] = {};\r\n            if (recordsProcessed > 0) {\r\n              newState.attrValues[attr].null = recordsProcessed;\r\n            }\r\n          }\r\n        }\r\n        for (const attr in newState.attrValues) {\r\n          const value = attr in record ? record[attr] : 'null';\r\n          if (!(value in newState.attrValues[attr])) {\r\n            newState.attrValues[attr][value] = 0;\r\n          }\r\n          newState.attrValues[attr][value]++;\r\n        }\r\n        recordsProcessed++;\r\n      }\r\n    );\r\n    this.setState(newState);\r\n  }\r\n\r\n  sendPropUpdate(command) {\r\n    this.props.onChange(update(this.props, command));\r\n  }\r\n\r\n  propUpdater(key) {\r\n    return value => this.sendPropUpdate({[key]: {$set: value}});\r\n  }\r\n\r\n  setValuesInFilter(attribute, values) {\r\n    this.sendPropUpdate({\r\n      valueFilter: {\r\n        [attribute]: {\r\n          $set: values.reduce((r, v) => {\r\n            r[v] = true;\r\n            return r;\r\n          }, {}),\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  addValuesToFilter(attribute, values) {\r\n    if (attribute in this.props.valueFilter) {\r\n      this.sendPropUpdate({\r\n        valueFilter: {\r\n          [attribute]: values.reduce((r, v) => {\r\n            r[v] = {$set: true};\r\n            return r;\r\n          }, {}),\r\n        },\r\n      });\r\n    } else {\r\n      this.setValuesInFilter(attribute, values);\r\n    }\r\n  }\r\n\r\n  removeValuesFromFilter(attribute, values) {\r\n    this.sendPropUpdate({\r\n      valueFilter: {[attribute]: {$unset: values}},\r\n    });\r\n  }\r\n\r\n  moveFilterBoxToTop(attribute) {\r\n    this.setState(\r\n      update(this.state, {\r\n        maxZIndex: {$set: this.state.maxZIndex + 1},\r\n        zIndices: {[attribute]: {$set: this.state.maxZIndex + 1}},\r\n      })\r\n    );\r\n  }\r\n\r\n  isOpen(dropdown) {\r\n    return this.state.openDropdown === dropdown;\r\n  }\r\n\r\n  makeDnDCell(items, onChange, classes) {\r\n    return (\r\n      <Sortable\r\n        options={{\r\n          group: 'shared',\r\n          ghostClass: 'pvtPlaceholder',\r\n          filter: '.pvtFilterBox',\r\n          preventOnFilter: false,\r\n        }}\r\n        tag=\"td\"\r\n        className={classes}\r\n        onChange={onChange}\r\n      >\r\n        {items.map(x => (\r\n          <DraggableAttribute\r\n            name={x}\r\n            key={x}\r\n            attrValues={this.state.attrValues[x]}\r\n            valueFilter={this.props.valueFilter[x] || {}}\r\n            sorter={getSort(this.props.sorters, x)}\r\n            menuLimit={this.props.menuLimit}\r\n            setValuesInFilter={this.setValuesInFilter.bind(this)}\r\n            addValuesToFilter={this.addValuesToFilter.bind(this)}\r\n            moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\r\n            removeValuesFromFilter={this.removeValuesFromFilter.bind(this)}\r\n            zIndex={this.state.zIndices[x] || this.state.maxZIndex}\r\n          />\r\n        ))}\r\n      </Sortable>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const numValsAllowed =\r\n      this.props.aggregators[this.props.aggregatorName]([])().numInputs || 0;\r\n\r\n    const aggregatorCellOutlet = this.props.aggregators[\r\n      this.props.aggregatorName\r\n    ]([])().outlet;\r\n\r\n    const rendererName =\r\n      this.props.rendererName in this.props.renderers\r\n        ? this.props.rendererName\r\n        : Object.keys(this.props.renderers)[0];\r\n\r\n    const rendererCell = (\r\n      <td className=\"pvtRenderers\">\r\n        <Dropdown\r\n          current={rendererName}\r\n          values={Object.keys(this.props.renderers)}\r\n          open={this.isOpen('renderer')}\r\n          zIndex={this.isOpen('renderer') ? this.state.maxZIndex + 1 : 1}\r\n          toggle={() =>\r\n            this.setState({\r\n              openDropdown: this.isOpen('renderer') ? false : 'renderer',\r\n            })\r\n          }\r\n          setValue={this.propUpdater('rendererName')}\r\n        />\r\n      </td>\r\n    );\r\n\r\n    const sortIcons = {\r\n      key_a_to_z: {\r\n        rowSymbol: '↕',\r\n        colSymbol: '↔',\r\n        next: 'value_a_to_z',\r\n      },\r\n      value_a_to_z: {\r\n        rowSymbol: '↓',\r\n        colSymbol: '→',\r\n        next: 'value_z_to_a',\r\n      },\r\n      value_z_to_a: {rowSymbol: '↑', colSymbol: '←', next: 'key_a_to_z'},\r\n    };\r\n\r\n    const aggregatorCell = (\r\n      <td className=\"pvtVals\">\r\n        <Dropdown\r\n          current={this.props.aggregatorName}\r\n          values={Object.keys(this.props.aggregators)}\r\n          open={this.isOpen('aggregators')}\r\n          zIndex={this.isOpen('aggregators') ? this.state.maxZIndex + 1 : 1}\r\n          toggle={() =>\r\n            this.setState({\r\n              openDropdown: this.isOpen('aggregators') ? false : 'aggregators',\r\n            })\r\n          }\r\n          setValue={this.propUpdater('aggregatorName')}\r\n        />\r\n        <a\r\n          role=\"button\"\r\n          className=\"pvtRowOrder\"\r\n          onClick={() =>\r\n            this.propUpdater('rowOrder')(sortIcons[this.props.rowOrder].next)\r\n          }\r\n        >\r\n          {sortIcons[this.props.rowOrder].rowSymbol}\r\n        </a>\r\n        <a\r\n          role=\"button\"\r\n          className=\"pvtColOrder\"\r\n          onClick={() =>\r\n            this.propUpdater('colOrder')(sortIcons[this.props.colOrder].next)\r\n          }\r\n        >\r\n          {sortIcons[this.props.colOrder].colSymbol}\r\n        </a>\r\n        {numValsAllowed > 0 && <br />}\r\n        {new Array(numValsAllowed).fill().map((n, i) => [\r\n          <Dropdown\r\n            key={i}\r\n            current={this.props.vals[i]}\r\n            values={Object.keys(this.state.attrValues).filter(\r\n              e =>\r\n                !this.props.hiddenAttributes.includes(e) &&\r\n                !this.props.hiddenFromAggregators.includes(e)\r\n            )}\r\n            open={this.isOpen(`val${i}`)}\r\n            zIndex={this.isOpen(`val${i}`) ? this.state.maxZIndex + 1 : 1}\r\n            toggle={() =>\r\n              this.setState({\r\n                openDropdown: this.isOpen(`val${i}`) ? false : `val${i}`,\r\n              })\r\n            }\r\n            setValue={value =>\r\n              this.sendPropUpdate({\r\n                vals: {$splice: [[i, 1, value]]},\r\n              })\r\n            }\r\n          />,\r\n          i + 1 !== numValsAllowed ? <br key={`br${i}`} /> : null,\r\n        ])}\r\n        {aggregatorCellOutlet && aggregatorCellOutlet(this.props.data)}\r\n      </td>\r\n    );\r\n\r\n    const unusedAttrs = Object.keys(this.state.attrValues)\r\n      .filter(\r\n        e =>\r\n          !this.props.rows.includes(e) &&\r\n          !this.props.cols.includes(e) &&\r\n          !this.props.hiddenAttributes.includes(e) &&\r\n          !this.props.hiddenFromDragDrop.includes(e)\r\n      )\r\n      .sort(sortAs(this.state.unusedOrder));\r\n\r\n    const unusedLength = unusedAttrs.reduce((r, e) => r + e.length, 0);\r\n    const horizUnused = unusedLength < this.props.unusedOrientationCutoff;\r\n\r\n    const unusedAttrsCell = this.makeDnDCell(\r\n      unusedAttrs,\r\n      order => this.setState({unusedOrder: order}),\r\n      `pvtAxisContainer pvtUnused ${\r\n        horizUnused ? 'pvtHorizList' : 'pvtVertList'\r\n      }`\r\n    );\r\n\r\n    const colAttrs = this.props.cols.filter(\r\n      e =>\r\n        !this.props.hiddenAttributes.includes(e) &&\r\n        !this.props.hiddenFromDragDrop.includes(e)\r\n    );\r\n\r\n    const colAttrsCell = this.makeDnDCell(\r\n      colAttrs,\r\n      this.propUpdater('cols'),\r\n      'pvtAxisContainer pvtHorizList pvtCols'\r\n    );\r\n\r\n    const rowAttrs = this.props.rows.filter(\r\n      e =>\r\n        !this.props.hiddenAttributes.includes(e) &&\r\n        !this.props.hiddenFromDragDrop.includes(e)\r\n    );\r\n    const rowAttrsCell = this.makeDnDCell(\r\n      rowAttrs,\r\n      this.propUpdater('rows'),\r\n      'pvtAxisContainer pvtVertList pvtRows'\r\n    );\r\n    const outputCell = (\r\n      <td className=\"pvtOutput\">\r\n        <PivotTable\r\n          {...update(this.props, {\r\n            data: {$set: this.state.materializedInput},\r\n          })}\r\n        />\r\n      </td>\r\n    );\r\n\r\n    if (horizUnused) {\r\n      return (\r\n        <table className=\"pvtUi\">\r\n          <tbody onClick={() => this.setState({openDropdown: false})}>\r\n            <tr>\r\n              {rendererCell}\r\n              {unusedAttrsCell}\r\n            </tr>\r\n            <tr>\r\n              {aggregatorCell}\r\n              {colAttrsCell}\r\n            </tr>\r\n            <tr>\r\n              {rowAttrsCell}\r\n              {outputCell}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <table className=\"pvtUi\">\r\n        <tbody onClick={() => this.setState({openDropdown: false})}>\r\n          <tr>\r\n            {rendererCell}\r\n            {aggregatorCell}\r\n            {colAttrsCell}\r\n          </tr>\r\n          <tr>\r\n            {unusedAttrsCell}\r\n            {rowAttrsCell}\r\n            {outputCell}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nPivotTableUI.propTypes = Object.assign({}, PivotTable.propTypes, {\r\n  onChange: PropTypes.func.isRequired,\r\n  hiddenAttributes: PropTypes.arrayOf(PropTypes.string),\r\n  hiddenFromAggregators: PropTypes.arrayOf(PropTypes.string),\r\n  hiddenFromDragDrop: PropTypes.arrayOf(PropTypes.string),\r\n  unusedOrientationCutoff: PropTypes.number,\r\n  menuLimit: PropTypes.number,\r\n});\r\n\r\nPivotTableUI.defaultProps = Object.assign({}, PivotTable.defaultProps, {\r\n  hiddenAttributes: [],\r\n  hiddenFromAggregators: [],\r\n  hiddenFromDragDrop: [],\r\n  unusedOrientationCutoff: 85,\r\n  menuLimit: 500,\r\n});\r\n\r\nexport default PivotTableUI;\r\n"]}